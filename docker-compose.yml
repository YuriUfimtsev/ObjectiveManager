services:
  front:
    build:
      context: ./ObjectiveManager.front
      dockerfile: ./Dockerfile
    depends_on:
      - api_gateway.api
    ports:
      - "3000:3000"

  api_gateway.api:
    build:
      context: ./ObjectiveManager.APIGateway
      dockerfile: APIGateway.Api/Dockerfile
    depends_on:
      - objective_service.api
      - auth_service.api
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:5000"

  auth_service.api:
    build:
      context: ./ObjectiveManager.AuthService
      dockerfile: AuthService.Api/Dockerfile
    depends_on:
      - postgres
      - objective_service.api
    environment:
      - ASPNETCORE_URLS=http://+:5001
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5001:5001"

  objective_service.api:
    build:
      context: ./ObjectiveManager.ObjectivesService
      dockerfile: ObjectivesService.Api/Dockerfile
    depends_on:
      - postgres
    environment:
      - ASPNETCORE_URLS=http://+:5002
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5002:5002"
  
  notifications_service.api:
    build:
      context: ./ObjectiveManager.NotificationsService
      dockerfile: NotificationsService.Api/Dockerfile
    depends_on:
      - postgres
      - objective_service.api
      - auth_service.api
    environment:
      - ASPNETCORE_URLS=http://+:5003
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5003:5003"

  postgres:
    image: postgres:17.0
    restart: unless-stopped
    environment:
      POSTGRES_USER:  "dev_user"
      POSTGRES_PASSWORD:  "dev_password"
      POSTGRES_MULTIPLE_DATABASES: "dev_ObjectivesServiceDB, dev_AuthServiceDB, dev_NotificationsServiceDB"
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d

volumes:
  pg_data: