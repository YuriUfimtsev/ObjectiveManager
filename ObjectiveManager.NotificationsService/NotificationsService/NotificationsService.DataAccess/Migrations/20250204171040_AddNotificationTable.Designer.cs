// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotificationsService.DataAccess.Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NotificationsService.DataAccess.Migrations
{
    [DbContext(typeof(NotificationsContext))]
    [Migration("20250204171040_AddNotificationTable")]
    partial class AddNotificationTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NotificationsService.Domain.Entities.FrequencyValueEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("IntervalInHours")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FrequencyValues");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IntervalInHours = 24L,
                            Name = "Раз в день"
                        },
                        new
                        {
                            Id = 2L,
                            IntervalInHours = 168L,
                            Name = "Раз в неделю"
                        },
                        new
                        {
                            Id = 3L,
                            IntervalInHours = 336L,
                            Name = "Раз в две недели"
                        },
                        new
                        {
                            Id = 4L,
                            IntervalInHours = 672L,
                            Name = "Раз в четыре недели"
                        });
                });

            modelBuilder.Entity("NotificationsService.Domain.Entities.NotificationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long>("FrequencyValueId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("NextNotificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FrequencyValueId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("NotificationsService.Domain.Entities.NotificationEntity", b =>
                {
                    b.HasOne("NotificationsService.Domain.Entities.FrequencyValueEntity", "FrequencyValue")
                        .WithMany()
                        .HasForeignKey("FrequencyValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FrequencyValue");
                });
#pragma warning restore 612, 618
        }
    }
}
